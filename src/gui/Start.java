/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.sun.org.apache.xpath.internal.operations.Quo;
import database.CalendarHandler;
import database.tweetHandler;
import database.tweetModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import tweets.TweetCleaner;
import ngram.NGramDriver;

/**
 *
 * @author Nancy
 */
public class Start extends javax.swing.JFrame {

    /**
     * Creates new form Start
     */
    public Start() {
        initComponents();
        setDisabled();
    }
    
    public void setDisabled(){
        filterCriteriaPanel.setEnabled(false);
        
        keywordCB.setEnabled(false);
        keywordTF.setEnabled(false);
        
        sDateLabel.setEnabled(false);
        eDateLabel.setEnabled(false);
        dateCB.setEnabled(false);
        smonthMB.setEnabled(false);
        sdayMB.setEnabled(false);
        syearMB.setEnabled(false);
        emonthMB.setEnabled(false);
        edayMB.setEnabled(false);
        eyearMB.setEnabled(false);
        resetCriteriaBtn.setEnabled(false);
        filterTweetsBtn.setEnabled(false);
        
        TDMethodPanel.setEnabled(false);
        termRB.setEnabled(false);
        topicRB.setEnabled(false);
        startTDBtn.setEnabled(false);
        
        browseBtn.setEnabled(false);
        viewtweetsBtn.setEnabled(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataGrp = new javax.swing.ButtonGroup();
        methodGrp = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        tabPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        startBtn = new javax.swing.JButton();
        username = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tweetField = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        latitudeField = new javax.swing.JTextField();
        longitudeField = new javax.swing.JTextField();
        counter = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        stopBtn = new javax.swing.JButton();
        titleVersion = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        viewtweetsBtn = new javax.swing.JButton();
        tweetSourcePanel = new javax.swing.JPanel();
        importBtn = new javax.swing.JRadioButton();
        browseBtn = new javax.swing.JButton();
        locdbBtn = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        selectSourceBtn = new javax.swing.JButton();
        filterCriteriaPanel = new javax.swing.JPanel();
        keywordTF = new javax.swing.JTextField();
        sDateLabel = new javax.swing.JLabel();
        eDateLabel = new javax.swing.JLabel();
        smonthMB = new javax.swing.JComboBox();
        sdayMB = new javax.swing.JComboBox();
        syearMB = new javax.swing.JComboBox();
        filterTweetsBtn = new javax.swing.JButton();
        keywordCB = new javax.swing.JCheckBox();
        dateCB = new javax.swing.JCheckBox();
        emonthMB = new javax.swing.JComboBox();
        edayMB = new javax.swing.JComboBox();
        eyearMB = new javax.swing.JComboBox();
        jSeparator5 = new javax.swing.JSeparator();
        resetCriteriaBtn = new javax.swing.JButton();
        TDMethodPanel = new javax.swing.JPanel();
        startTDBtn = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        termRB = new javax.swing.JRadioButton();
        topicRB = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        Ngrambutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        tabPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OUTPUT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        tabPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabPane.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                tabPaneComponentRemoved(evt);
            }
        });

        startBtn.setText("Start Crawling");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        username.setText("USERNAME");

        tweetField.setEditable(false);
        tweetField.setColumns(20);
        tweetField.setLineWrap(true);
        tweetField.setRows(5);
        tweetField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tweetField.setFocusable(false);
        jScrollPane1.setViewportView(tweetField);

        jLabel1.setText("TWEET");

        usernameField.setEditable(false);
        usernameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameField.setFocusable(false);
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("LATITUDE");

        jLabel5.setText("LONGITUDE");

        latitudeField.setEditable(false);
        latitudeField.setFocusable(false);

        longitudeField.setEditable(false);
        longitudeField.setFocusable(false);

        counter.setEditable(false);
        counter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        counter.setBorder(null);
        counter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                counterActionPerformed(evt);
            }
        });

        jLabel6.setText("Tweet Count");

        stopBtn.setText("Stop Crawling");
        stopBtn.setEnabled(false);
        stopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBtnActionPerformed(evt);
            }
        });

        titleVersion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleVersion.setText("Twitter4J Streaming API Support 3.0.3");
        titleVersion.setEnabled(false);
        titleVersion.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(stopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(username))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(188, 188, 188)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(counter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel5)))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(longitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(latitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(titleVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator4))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(latitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(counter, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(392, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(193, Short.MAX_VALUE))
        );

        tabPane.addTab("TWEET CRAWLER", jPanel2);

        viewtweetsBtn.setText("View Starting Tweet Data");
        viewtweetsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewtweetsBtnActionPerformed(evt);
            }
        });

        tweetSourcePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TWEETS SOURCE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        dataGrp.add(importBtn);
        importBtn.setText("IMPORT");
        importBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBtnActionPerformed(evt);
            }
        });

        browseBtn.setText("BROWSE..");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        dataGrp.add(locdbBtn);
        locdbBtn.setText("LOCAL DATABASE");
        locdbBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locdbBtnActionPerformed(evt);
            }
        });

        selectSourceBtn.setText("SELECT SOURCE");
        selectSourceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectSourceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tweetSourcePanelLayout = new javax.swing.GroupLayout(tweetSourcePanel);
        tweetSourcePanel.setLayout(tweetSourcePanelLayout);
        tweetSourcePanelLayout.setHorizontalGroup(
            tweetSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tweetSourcePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tweetSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tweetSourcePanelLayout.createSequentialGroup()
                        .addGroup(tweetSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tweetSourcePanelLayout.createSequentialGroup()
                                .addGroup(tweetSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tweetSourcePanelLayout.createSequentialGroup()
                                        .addComponent(importBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(browseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(locdbBtn))
                                .addGap(118, 118, 118)))
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tweetSourcePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(selectSourceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))))
        );
        tweetSourcePanelLayout.setVerticalGroup(
            tweetSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tweetSourcePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tweetSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseBtn)
                    .addComponent(importBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(locdbBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectSourceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        filterCriteriaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FILTER CRITERIA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        sDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sDateLabel.setText("START DATE");

        eDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        eDateLabel.setText("END DATE");

        smonthMB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                smonthMBItemStateChanged(evt);
            }
        });
        smonthMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smonthMBActionPerformed(evt);
            }
        });

        syearMB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                syearMBMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                syearMBMouseClicked(evt);
            }
        });
        syearMB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                syearMBItemStateChanged(evt);
            }
        });
        syearMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syearMBActionPerformed(evt);
            }
        });
        syearMB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                syearMBKeyPressed(evt);
            }
        });

        filterTweetsBtn.setText("FILTER TWEETS");
        filterTweetsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterTweetsBtnActionPerformed(evt);
            }
        });

        keywordCB.setText("KEYWORD/S");
        keywordCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keywordCBActionPerformed(evt);
            }
        });

        dateCB.setText("DATE");
        dateCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateCBActionPerformed(evt);
            }
        });

        emonthMB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                emonthMBItemStateChanged(evt);
            }
        });

        edayMB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                edayMBItemStateChanged(evt);
            }
        });

        resetCriteriaBtn.setText("RESET");
        resetCriteriaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetCriteriaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filterCriteriaPanelLayout = new javax.swing.GroupLayout(filterCriteriaPanel);
        filterCriteriaPanel.setLayout(filterCriteriaPanelLayout);
        filterCriteriaPanelLayout.setHorizontalGroup(
            filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                        .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, filterCriteriaPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(smonthMB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filterCriteriaPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(eDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addComponent(sDateLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filterCriteriaPanelLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(emonthMB, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(edayMB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sdayMB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(syearMB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eyearMB, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateCB)
                            .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                                .addComponent(keywordCB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(keywordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                                    .addComponent(resetCriteriaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(filterTweetsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        filterCriteriaPanelLayout.setVerticalGroup(
            filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keywordCB)
                    .addComponent(keywordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                        .addComponent(smonthMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emonthMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(filterCriteriaPanelLayout.createSequentialGroup()
                        .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sdayMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(syearMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edayMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eyearMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filterCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(filterTweetsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(resetCriteriaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TDMethodPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        startTDBtn.setText("START");
        startTDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTDBtnActionPerformed(evt);
            }
        });

        methodGrp.add(termRB);
        termRB.setText("Language Modeler");
        termRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termRBActionPerformed(evt);
            }
        });

        methodGrp.add(topicRB);
        topicRB.setText("Topic Modeler");
        topicRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topicRBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TDMethodPanelLayout = new javax.swing.GroupLayout(TDMethodPanel);
        TDMethodPanel.setLayout(TDMethodPanelLayout);
        TDMethodPanelLayout.setHorizontalGroup(
            TDMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TDMethodPanelLayout.createSequentialGroup()
                .addGroup(TDMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TDMethodPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(TDMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(TDMethodPanelLayout.createSequentialGroup()
                                .addComponent(termRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(topicRB, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(TDMethodPanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(startTDBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        TDMethodPanelLayout.setVerticalGroup(
            TDMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TDMethodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TDMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termRB)
                    .addComponent(topicRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startTDBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setText("START OVER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Ngrambutton.setText("NGram");
        Ngrambutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NgrambuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tweetSourcePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filterCriteriaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TDMethodPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewtweetsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Ngrambutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(tweetSourcePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filterCriteriaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TDMethodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewtweetsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Ngrambutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tabPane)))
        );

        tabPane.getAccessibleContext().setAccessibleName("VISUALIZATION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewtweetsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewtweetsBtnActionPerformed
        viewTweets vt = new viewTweets();
        vt.setVisible(true);
    }//GEN-LAST:event_viewtweetsBtnActionPerformed

    private void importBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBtnActionPerformed
        if(importBtn.isSelected())
        browseBtn.setEnabled(true);
        else
        browseBtn.setEnabled(false);
    }//GEN-LAST:event_importBtnActionPerformed

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browseBtnActionPerformed

    private void locdbBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locdbBtnActionPerformed
        if(locdbBtn.isSelected())
        browseBtn.setEnabled(false);
    }//GEN-LAST:event_locdbBtnActionPerformed

    private void smonthMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smonthMBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smonthMBActionPerformed

    private void filterTweetsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterTweetsBtnActionPerformed
        if((keywordCB.isSelected() && !keywordTF.getText().isEmpty()) && dateCB.isSelected()){
            TweetCleaner tc = new TweetCleaner();
            String start = smonthMB.getSelectedItem().toString()+" "+sdayMB.getSelectedItem().toString()+" "+syearMB.getSelectedItem().toString();
            String end = emonthMB.getSelectedItem().toString()+" "+edayMB.getSelectedItem().toString()+" "+eyearMB.getSelectedItem().toString();
//            tc.cleanByKeywordsAndDate(keywordTF.getText(), start, end);
            
            ArrayList<tweetModel> tweets = tc.cleanByKeywordsAndDate(keywordTF.getText(), start, end);
            System.out.println("    ");
            for(tweetModel t : tweets){
                System.out.println("[*] "+t.getMessage()+" "+t.getDate());
              
            }
              System.out.println("    ");
//            System.out.println(tc.cleanByKeywordsAndDate(keywordTF.getText(), start, end).get(0).getMessage());
            
            TDMethodPanel.setEnabled(true);
            termRB.setEnabled(true);
            topicRB.setEnabled(true);
            startTDBtn.setEnabled(true);
            viewtweetsBtn.setEnabled(true);
        }
        else if((keywordCB.isSelected() && !keywordTF.getText().isEmpty())){
            TweetCleaner tc = new TweetCleaner();
            tc.cleanByKeyword(keywordTF.getText());
            
            TDMethodPanel.setEnabled(true);
            termRB.setEnabled(true);
            topicRB.setEnabled(true);
            startTDBtn.setEnabled(true);
            viewtweetsBtn.setEnabled(true);
        }
//        if((keywordCB.isSelected() && !keywordTF.getText().isEmpty()) || dateCB.isSelected()){
        else if(dateCB.isSelected()){
            TweetCleaner tc = new TweetCleaner();
            String start = smonthMB.getSelectedItem().toString()+" "+sdayMB.getSelectedItem().toString()+" "+syearMB.getSelectedItem().toString();
            String end = emonthMB.getSelectedItem().toString()+" "+edayMB.getSelectedItem().toString()+" "+eyearMB.getSelectedItem().toString();
            
            ArrayList<tweetModel> tweets = tc.cleanByDate(start, end);
            System.out.println(tweets.size());
            for(tweetModel t : tweets)
                System.out.println("[*] "+t.getMessage()+" "+t.getDate());
            
            TDMethodPanel.setEnabled(true);
            termRB.setEnabled(true);
            topicRB.setEnabled(true);
            startTDBtn.setEnabled(true);
            viewtweetsBtn.setEnabled(true);
            
        }else if((keywordCB.isSelected() && keywordTF.getText().isEmpty())){
            JOptionPane.showMessageDialog(null, "Please input a keyword.", "Filter Criteria Requirement", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
        
//        else{
//            JOptionPane.showMessageDialog(null, "Please provide at least 1 criteria.", "Filter Criteria Requirement", JOptionPane.INFORMATION_MESSAGE);
//        }
    }//GEN-LAST:event_filterTweetsBtnActionPerformed

    private void keywordCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keywordCBActionPerformed
        if(keywordCB.isSelected())
        keywordTF.setEnabled(true);
        else
        keywordTF.setEnabled(false);
    }//GEN-LAST:event_keywordCBActionPerformed

    private void dateCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateCBActionPerformed
        if(dateCB.isSelected()){
            sDateLabel.setEnabled(true);
            eDateLabel.setEnabled(true);
            smonthMB.setEnabled(true);
            sdayMB.setEnabled(true);
            syearMB.setEnabled(true);
            emonthMB.setEnabled(true);
            edayMB.setEnabled(true);
            eyearMB.setEnabled(true);
        }else{
            sDateLabel.setEnabled(false);
            eDateLabel.setEnabled(false);
            smonthMB.setEnabled(false);
            sdayMB.setEnabled(false);
            syearMB.setEnabled(false);
            emonthMB.setEnabled(false);
            edayMB.setEnabled(false);
            eyearMB.setEnabled(false);
        }
    }//GEN-LAST:event_dateCBActionPerformed

    private void startTDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTDBtnActionPerformed

        
        
        String method = "";
       // String tabname = null;
        
        if(methodGrp.getSelection() != null){
            if(termRB.isSelected()){
                DD_Level1 p = new DD_Level1();
                method = "LM";
                
                if(keywordCB.isSelected() && dateCB.isSelected()){
                    tabPane.add(keywordTF.getText() + "(" + smonthMB.getSelectedItem().toString()
                        + "-" + emonthMB.getSelectedItem().toString() + " "
                        + syearMB.getSelectedItem().toString() + ") - " + method, p);
                    tabPane.setSelectedComponent(p);
                }else if(keywordCB.isSelected()){
                    tabPane.add(keywordTF.getText() + " - " + method, p);
                    tabPane.setSelectedComponent(p);
                }else if(dateCB.isSelected()){
                    tabPane.add("(" + smonthMB.getSelectedItem().toString()
                        + "-" + emonthMB.getSelectedItem().toString() + " "
                        + syearMB.getSelectedItem().toString() + ") - " + method, p);
                    tabPane.setSelectedComponent(p);
                }else;

            }
            else{
               /* DD_Level11 p = new DD_Level11();
                method = "TM";
                
                if(keywordCB.isSelected() && dateCB.isSelected()){
                    tabPane.add(keywordTF.getText() + "(" + smonthMB.getSelectedItem().toString()
                        + "-" + emonthMB.getSelectedItem().toString() + " "
                        + syearMB.getSelectedItem().toString() + ") - " + method, p);
                    tabPane.setSelectedComponent(p);
                }else if(keywordCB.isSelected()){
                    tabPane.add(keywordTF.getText() + " - " + method, p);
                    tabPane.setSelectedComponent(p);
                }else if(dateCB.isSelected()){
                    tabPane.add("(" + smonthMB.getSelectedItem().toString()
                        + "-" + emonthMB.getSelectedItem().toString() + " "
                        + syearMB.getSelectedItem().toString() + ") - " + method, p);
                    tabPane.setSelectedComponent(p);*/
           // }else;

            }

            viewtweetsBtn.setEnabled(true);
        }
        
    }//GEN-LAST:event_startTDBtnActionPerformed

    private void termRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termRBActionPerformed
        if(termRB.isSelected())
        termRB.setEnabled(true);
        else
        termRB.setEnabled(false);
    }//GEN-LAST:event_termRBActionPerformed

    private void topicRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topicRBActionPerformed
        
    }//GEN-LAST:event_topicRBActionPerformed

    private void selectSourceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectSourceBtnActionPerformed
        if(dataGrp.getSelection() != null){
            filterCriteriaPanel.setEnabled(true);
        
            keywordCB.setEnabled(true);
            dateCB.setEnabled(true);
            resetCriteriaBtn.setEnabled(true);
            filterTweetsBtn.setEnabled(true);
            fillDateBoxes();
        }else{
            JOptionPane.showMessageDialog(null, "Must select tweet data source.", "Tweets Source Requirement", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_selectSourceBtnActionPerformed

    //Fills date boxes with initial values
    private void fillDateBoxes(){
        String[] start = tweetHandler.getEarliestDate().split(" "); //[0] day, [1] month, [2] year
        String[] end = tweetHandler.getLatestDate().split(" ");
        
            System.out.println(start[0]+","+start[1]+","+start[2] + " | " + end[0]+","+end[1]+","+end[2]);
        //Fills year boxes
        int firstYear = Integer.parseInt(start[2]);
        int lastYear = Integer.parseInt(end[2]);
        
        if(syearMB.getItemCount() != 0)
            syearMB.removeAllItems();
        if(eyearMB.getItemCount() != 0)
            eyearMB.removeAllItems();
        
        for(int y = firstYear; y <= lastYear; y++){
            syearMB.addItem(y);
            eyearMB.addItem(y);
        }
        
        //Fills month boxes
        int firstMonth = CalendarHandler.monthNumber(start[1]);
        int lastMonth = CalendarHandler.monthNumber(end[1]);
        
        if(firstYear != Integer.parseInt(syearMB.getSelectedItem().toString()))
            firstMonth = 1;
        if(lastMonth < 12) lastMonth = 12;
            System.out.println(firstMonth + " | " + lastMonth);
          
        if(smonthMB.getItemCount() != 0)
            smonthMB.removeAllItems();
        if(emonthMB.getItemCount() != 0)
            emonthMB.removeAllItems();
        
        for(int i = firstMonth; i <= lastMonth; i++){
            if(i == 1) {
                System.out.println(" | " + i);
                smonthMB.addItem("Jan");
                emonthMB.addItem("Jan");
            }
            else if(i == 2) {
                smonthMB.addItem("Feb");
                emonthMB.addItem("Feb");
            }
            else if(i == 3) {
                smonthMB.addItem("Mar");
                emonthMB.addItem("Mar");
            }
            else if(i == 4) {
                smonthMB.addItem("Apr");
                emonthMB.addItem("Apr");
            }
            else if(i == 5) {
                smonthMB.addItem("May");
                emonthMB.addItem("May");
            }
            else if(i == 6) {
                smonthMB.addItem("Jun");
                emonthMB.addItem("Jun");
            }
            else if(i == 7) {
                smonthMB.addItem("Jul");
                emonthMB.addItem("Jul");
            }
            else if(i == 8) {
                smonthMB.addItem("Aug");
                emonthMB.addItem("Aug");
            }
            else if(i == 9) {
                smonthMB.addItem("Sep");
                emonthMB.addItem("Sep");
            }
            else if(i == 10) {
                smonthMB.addItem("Oct");
                emonthMB.addItem("Oct");
            }
            else if(i == 11) {
                smonthMB.addItem("Nov");
                emonthMB.addItem("Nov");
            }
            else if(i == 12) {
                smonthMB.addItem("Dec");
                emonthMB.addItem("Dec");
            }
        }
        
        //Fills day boxes
        fillStartDayBoxes(firstMonth, Integer.parseInt(syearMB.getSelectedItem().toString()));
        fillEndDayBoxes(firstMonth, Integer.parseInt(eyearMB.getSelectedItem().toString()));
    }
    
    private void fillStartDayBoxes(int month, int year){
        if(sdayMB.getItemCount() != 0)
            sdayMB.removeAllItems();
        for(int x = 1; x <= CalendarHandler.numDaysinMonth(month, year); x++){
            sdayMB.addItem(x);
        }
    }
    
    private void fillEndDayBoxes(int month, int year){
        if(edayMB.getItemCount() != 0)
            edayMB.removeAllItems();
        for(int x = 1; x <= CalendarHandler.numDaysinMonth(month, year); x++){
            edayMB.addItem(x);
        }
    }
    
    private void resetCriteriaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetCriteriaBtnActionPerformed
        keywordCB.setSelected(false);
        keywordTF.setText("");
        keywordTF.setEnabled(false);
        dateCB.setSelected(false);
        
        TDMethodPanel.setEnabled(false);
        termRB.setEnabled(false);
        topicRB.setEnabled(false);
        startTDBtn.setEnabled(false);
        viewtweetsBtn.setEnabled(false);
    }//GEN-LAST:event_resetCriteriaBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setDisabled();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void smonthMBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_smonthMBItemStateChanged
        int month = CalendarHandler.monthNumber(smonthMB.getSelectedItem().toString());
        int year = Integer.parseInt(syearMB.getSelectedItem().toString());
        fillStartDayBoxes(month, year);
    }//GEN-LAST:event_smonthMBItemStateChanged

    private void emonthMBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_emonthMBItemStateChanged
        int month = CalendarHandler.monthNumber(emonthMB.getSelectedItem().toString());
        int year = Integer.parseInt(eyearMB.getSelectedItem().toString());
        fillEndDayBoxes(month, year);
    }//GEN-LAST:event_emonthMBItemStateChanged

    private void NgrambuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NgrambuttonActionPerformed
        // TODO add your handling code here:

        viewNGram grammy = new viewNGram();
        grammy.setVisible(true);
    }//GEN-LAST:event_NgrambuttonActionPerformed

    private void tabPaneComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tabPaneComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tabPaneComponentRemoved

    private void stopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBtnActionPerformed
        //        System.exit(0);
    }//GEN-LAST:event_stopBtnActionPerformed

    private void counterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_counterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_counterActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed

    }//GEN-LAST:event_usernameFieldActionPerformed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        startBtn.setEnabled(false);
        stopBtn.setEnabled(true);

        /*
        * STREAM TWEETS

        TwitterStream twitterStream = new TwitterStreamFactory(config.build()).getInstance();
        StatusListener listener = new StatusListener() {

            int tweetCtr = 0;

            @Override
            public void onStatus(Status status) {

                //Store Tweet in Database
                tweetModel tw = new tweetModel();
                tw.setStatusId(String.valueOf(status.getId()));
                tw.setUsername(status.getUser().getScreenName());
                tw.setMessage(status.getText().toString());

                if (status.isRetweet()) {
                    tw.setRetweetCount(status.getRetweetedStatus().getRetweetCount());
                    System.out.println("RT = " + status.getRetweetedStatus().getRetweetCount());
                } else {
                    tw.setRetweetCount(status.getRetweetCount());
                }

                tw.setLatitude(status.getGeoLocation().latitude);
                tw.setLonghitude(status.getGeoLocation().longitude);
                tw.setDate(status.getCreatedAt().toGMTString());

                tw.setMessage(tweetHandler.RewriteTweet(tw.getMessage()));   //Rewrites Tweet for Emoji Statuses
                tweetHandler.addTweet(tw);

                usernameField.setText("@" + tw.getUsername());
                tweetField.setText(tw.getMessage());
                latitudeField.setText(Double.toString(tw.getLatitude()));
                longitudeField.setText(Double.toString(tw.getLonghitude()));

                tweetCtr++;
                counter.setText(Integer.toString(tweetCtr));

            }

            @Override
            public void onDeletionNotice(StatusDeletionNotice statusDeletionNotice) {
                System.out.println("Got a status deletion notice id:" + statusDeletionNotice.getStatusId());
            }

            @Override
            public void onTrackLimitationNotice(int numberOfLimitedStatuses) {
                System.out.println("Got track limitation notice:" + numberOfLimitedStatuses);
            }

            @Override
            public void onScrubGeo(long userId, long upToStatusId) {
                System.out.println("Got scrub_geo event userId:" + userId + " upToStatusId:" + upToStatusId);
            }

            @Override
            public void onStallWarning(StallWarning warning) {
                System.out.println("Got stall warning:" + warning);
            }

            @Override
            public void onException(Exception ex) {
                ex.printStackTrace();
            }
        };
        twitterStream.addListener(listener);
        ManilaStreamer(twitterStream);   //Start streaming w/ GeoLocation
        */
    }//GEN-LAST:event_startBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ngrambutton;
    private javax.swing.JPanel TDMethodPanel;
    private javax.swing.JButton browseBtn;
    private javax.swing.JTextField counter;
    private javax.swing.ButtonGroup dataGrp;
    private javax.swing.JCheckBox dateCB;
    private javax.swing.JLabel eDateLabel;
    private javax.swing.JComboBox edayMB;
    private javax.swing.JComboBox emonthMB;
    private javax.swing.JComboBox eyearMB;
    private javax.swing.JPanel filterCriteriaPanel;
    private javax.swing.JButton filterTweetsBtn;
    private javax.swing.JRadioButton importBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JCheckBox keywordCB;
    private javax.swing.JTextField keywordTF;
    private javax.swing.JTextField latitudeField;
    private javax.swing.JRadioButton locdbBtn;
    private javax.swing.JTextField longitudeField;
    private javax.swing.ButtonGroup methodGrp;
    private javax.swing.JButton resetCriteriaBtn;
    private javax.swing.JLabel sDateLabel;
    private javax.swing.JComboBox sdayMB;
    private javax.swing.JButton selectSourceBtn;
    private javax.swing.JComboBox smonthMB;
    private javax.swing.JButton startBtn;
    private javax.swing.JButton startTDBtn;
    private javax.swing.JButton stopBtn;
    private javax.swing.JComboBox syearMB;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JRadioButton termRB;
    private javax.swing.JLabel titleVersion;
    private javax.swing.JRadioButton topicRB;
    private javax.swing.JTextArea tweetField;
    private javax.swing.JPanel tweetSourcePanel;
    private javax.swing.JLabel username;
    private javax.swing.JTextField usernameField;
    private javax.swing.JButton viewtweetsBtn;
    // End of variables declaration//GEN-END:variables

public String getkeyword(){
    return keywordTF.getText();
        }
}
